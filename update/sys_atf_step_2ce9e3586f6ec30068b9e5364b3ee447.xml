<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_atf_step">
    <sys_atf_step action="INSERT_OR_UPDATE">
        <active>true</active>
        <description>Run Server Side Validation Script</description>
        <display_name>Run Server Side Script</display_name>
        <inputs/>
        <order>1</order>
        <step_config display_value="Run Server Side Script">41de4a935332120028bc29cac2dc349a</step_config>
        <sys_class_name>sys_atf_step</sys_class_name>
        <sys_created_by>gfrancischelli</sys_created_by>
        <sys_created_on>2017-11-16 20:31:14</sys_created_on>
        <sys_id>2ce9e3586f6ec30068b9e5364b3ee447</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>Run Server Side Script</sys_name>
        <sys_package display_value="Snap" source="x_link3_snap">9b765b106f6ec30068b9e5364b3ee44a</sys_package>
        <sys_policy/>
        <sys_scope display_value="Snap">9b765b106f6ec30068b9e5364b3ee44a</sys_scope>
        <sys_update_name>sys_atf_step_2ce9e3586f6ec30068b9e5364b3ee447</sys_update_name>
        <sys_updated_by>gfrancischelli</sys_updated_by>
        <sys_updated_on>2017-11-16 20:59:39</sys_updated_on>
        <table/>
        <test display_value="Snapshot Test">008923586f6ec30068b9e5364b3ee45e</test>
        <timeout/>
    </sys_atf_step>
    <sys_variable_value action="delete_multiple" query="document_key=2ce9e3586f6ec30068b9e5364b3ee447"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_atf_step</document>
        <document_key>2ce9e3586f6ec30068b9e5364b3ee447</document_key>
        <order>100</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>gfrancischelli</sys_created_by>
        <sys_created_on>2017-11-16 20:31:15</sys_created_on>
        <sys_id>c2e9e3586f6ec30068b9e5364b3ee477</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_updated_by>gfrancischelli</sys_updated_by>
        <sys_updated_on>2017-11-16 20:59:39</sys_updated_on>
        <value>// stepResult.setOutputMessage: Log a message to step results after step executes.&#13;
//                              Can only be called once or will overwrite previous&#13;
//                              message&#13;
&#13;
// (function(outputs, steps, stepResult, assertEqual) {&#13;
//   describe("Snap", function() {&#13;
//     it("get the data from a snapshot", function() {&#13;
//       var gr = new GlideRecord("x_link3_snap_snapshot");&#13;
//       gr.initialize();&#13;
//       gr.setValue("u_table", "table_name");&#13;
//       gr.setValue("u_data", '{"name": "Aragorn"}');&#13;
&#13;
//       var data = Snap.getData(gr);&#13;
//       gs.info(JSON.stringify(data, null, 2));&#13;
&#13;
//       expect(data.result).toEqual({ name: "Aragorn" });&#13;
//     });&#13;
//   });&#13;
// })(outputs, steps, stepResult, assertEqual);&#13;
// jasmine.getEnv().execute();&#13;
&#13;
(function(step, stepResult, jasmine, describe) {&#13;
	&#13;
	describe("A jasmine test with success result", function() {&#13;
		beforeEach(function() {&#13;
			//create the test sys_repo_config record&#13;
			var gr = new GlideRecord('sys_repo_config');&#13;
			gr.setValue('url', 'https://thisisafaketesturl.com/fakegitrepo');&#13;
			gr.setValue('username', 'fakeuser');&#13;
			gr.setValue('password', 'fakepassword');&#13;
			gr.insert();&#13;
		});&#13;
&#13;
		it("Expect sys_repo_config exists", function() {&#13;
			var gr = new GlideRecord('sys_repo_config');&#13;
			gr.addQuery('username', 'fakeuser');&#13;
			gr.query();&#13;
			expect(gr.getRowCount()).toEqual(1);&#13;
		});&#13;
&#13;
		afterEach(function() {&#13;
			// remove the test record&#13;
			var gr = new GlideRecord('sys_repo_config');&#13;
			gr.addQuery('username', 'fakeuser');&#13;
			gr.deleteMultiple();&#13;
		});&#13;
	});&#13;
	&#13;
})(step, stepResult, jasmine, describe);&#13;
&#13;
jasmine.getEnv().execute();&#13;
&#13;
</value>
        <variable display_value="">989d9e235324220002c6435723dc3484</variable>
    </sys_variable_value>
</record_update>
